import { createRouter, createWebHistory, type RouteRecordRaw } from 'vue-router';
import { useAuthStore } from '@/store';

const AuthenticatedLayout = () => import('@/layouts/AuthenticatedLayout.vue');

// Dynamic import of modules generated by rapida-engine
let projectModules: RouteRecordRaw[] = [];

try {
  // eslint-disable-next-line @typescript-eslint/no-var-requires
  const config = require('@/project.config.ts');
  projectModules = (config.projectModules || []).map((mod: any) => ({
    path: mod.path.replace(/^\//, ''),
    name: mod.id,
    component: mod.page
  }));
} catch (err) {
  console.warn('⚠️ No dynamic project.config.ts found. Skipping dynamic modules.');
}

const routes: RouteRecordRaw[] = [
  {
    path: '/login',
    name: 'Login',
    component: () => import('@/pages/auth/Login.vue'),
    meta: { requiresAuth: false }
  },
  {
    path: '/register',
    name: 'Register',
    component: () => import('@/pages/auth/Register.vue'),
    meta: { requiresAuth: false }
  },
  {
    path: '/',
    component: AuthenticatedLayout,
    meta: { requiresAuth: true },
    children: [
      {
        path: 'dashboard',
        name: 'Dashboard',
        component: () => import('@/pages/dashboard/Dashboard.vue')
      },
      ...projectModules
    ]
  }
];

const router = createRouter({
  history: createWebHistory(),
  routes
});

router.beforeEach((to, from, next) => {
  const auth = useAuthStore();
  if (to.meta.requiresAuth && !auth.token) {
    return next('/login');
  }
  next();
});

export default router;
